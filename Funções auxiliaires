#descobre o len do maior

def lenmax(t):
    lenmax = len(t[0])
    for i in range(len(t)):
        if lenmax < len(t[i]):
            lenmax = len(t[i])
    return lenmax

def acrescenta_tuple_colunas(t, n):
    s=()
    for i in range(len(t)):
        l=t[i]
        while len(l)<n:
            l=(0,)+l
        s+=(l,)
    return s

def acrescenta_tuple_linhas(t, n):
    s=()
    for i in range(len(t)):
        l=t[i]
        while len(l)<n:
            l=l+(0,)
        s+=(l,)
    return s


import ast

def le_tabuleiro(fich):
    f = open(fich,'r')
    l = f.readline()
    f.close()
    return ast.literal_eval(l)

def pede_jogada(tab):
    if not e_tabuleiro(tab):
        raise ValueError('pede_jogada: argumentos invalidos')
    
    dim = tabuleiro_dimensoes(tab)[0]
    print('Introduza a jogada')
    c = input('- coordenada entre ' + coordenada_para_cadeia(1,1) + \
        ' e ' + coordenada_para_cadeia(dim,dim) + ' >> ')
    coor1 = c[1]
    coor2 = c[5]
    v = input('- valor >> ')                #quando nao for da forma pedida, retorna-se argumentos invalidos?
                                            #coordenada_para_cadeia(coor1,coor2) == c ???
    if ((0 < coor1 <= dim) and ((v == 1) or (v == 2)) and (0 < coor2 <= dim)):
        return cria_jogada((coor1,coor2),v)
    return False

    #inacabada
